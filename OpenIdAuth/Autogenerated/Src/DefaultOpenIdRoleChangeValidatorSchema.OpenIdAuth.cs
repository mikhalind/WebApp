namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DefaultOpenIdRoleChangeValidatorSchema

	/// <exclude/>
	public class DefaultOpenIdRoleChangeValidatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DefaultOpenIdRoleChangeValidatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DefaultOpenIdRoleChangeValidatorSchema(DefaultOpenIdRoleChangeValidatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4fcf7fa3-9797-433e-9321-4ff8f0106b2b");
			Name = "DefaultOpenIdRoleChangeValidator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5daf09f1-167a-4d95-90ab-547ed370e530");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,219,78,227,48,16,125,46,18,255,96,202,75,42,85,249,0,216,93,137,166,20,229,161,128,182,176,47,8,173,220,100,210,90,74,236,200,23,164,8,241,239,59,190,164,105,66,75,151,183,196,158,57,231,204,153,25,115,90,129,170,105,6,100,246,184,92,137,66,199,137,224,5,219,24,73,53,19,60,126,168,129,167,249,141,209,219,243,179,247,243,179,145,81,140,111,200,170,81,26,170,235,221,127,151,43,225,240,105,124,203,53,211,12,212,145,235,5,205,180,144,254,30,35,46,37,108,144,158,36,37,85,234,138,204,161,160,166,212,94,204,111,81,66,178,165,124,3,127,104,201,114,138,121,46,231,37,68,205,24,207,17,63,210,77,13,162,136,210,163,89,147,201,43,166,213,102,93,178,140,100,150,233,36,17,185,34,199,241,16,204,90,180,19,191,4,189,21,57,202,127,148,236,141,106,112,42,71,181,255,33,206,144,134,220,129,246,95,209,179,2,137,230,115,200,172,243,196,244,126,167,68,105,105,93,3,23,124,143,109,155,16,199,54,122,163,146,168,108,11,21,37,63,7,89,222,245,102,229,110,151,148,211,13,200,24,25,83,174,52,229,25,204,28,80,180,135,105,219,51,26,73,208,70,242,128,26,39,18,80,112,80,217,39,240,241,31,253,202,214,66,148,36,85,182,158,133,20,149,247,235,84,121,119,134,229,238,48,205,219,194,50,129,50,219,186,133,67,89,153,117,34,74,83,113,43,22,203,29,59,240,57,30,143,175,59,51,26,117,147,87,140,63,115,166,49,166,115,120,200,57,94,237,69,142,67,237,158,239,229,149,252,205,28,147,122,18,11,208,217,22,145,222,15,170,248,240,121,172,32,209,62,115,236,178,172,1,243,89,255,194,183,35,198,169,168,168,108,60,82,108,161,166,193,128,233,144,123,210,90,18,212,117,58,80,85,15,27,139,125,194,185,207,61,42,142,166,129,31,62,231,87,116,64,124,168,185,109,248,133,15,141,83,117,111,202,242,65,222,86,53,218,182,203,11,209,216,238,46,165,160,165,130,47,166,192,238,201,55,167,64,98,74,55,5,109,71,203,202,66,157,238,167,143,107,187,217,118,197,159,246,122,50,118,113,211,64,231,188,159,51,85,151,180,113,182,225,222,186,218,58,239,67,197,90,26,248,31,35,46,129,231,254,37,8,255,159,158,5,247,242,4,215,252,43,228,76,75,40,247,47,139,53,43,229,86,230,55,182,231,160,137,14,151,13,86,18,189,252,180,165,67,224,176,145,157,153,23,67,148,83,246,4,234,254,28,56,234,193,104,12,169,67,5,189,23,9,217,251,89,95,24,238,79,251,135,31,228,31,231,196,146,98,241,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4fcf7fa3-9797-433e-9321-4ff8f0106b2b"));
		}

		#endregion

	}

	#endregion

}

